--- host/Modules/posixmodule.c	2017-12-05 09:27:19.000000000 +0100
+++ armv7a/Modules/posixmodule.c	2018-01-13 21:32:13.000000000 +0100
@@ -9,7 +9,6 @@
    test macro, e.g. '_MSC_VER'. */


-
 #ifdef __APPLE__
    /*
     * Step 1 of support for weak-linking a number of symbols existing on
@@ -394,6 +393,11 @@
 #define MODNAME "posix"
 #endif

+//PMPP API<21
+#if __ANDROID_API__ < 21
+    extern ssize_t sendfile(int out_fd, int in_fd, off_t *offset, size_t count);
+#endif
+//PMPP API<21

 #ifdef HAVE_FORK
 static void
@@ -5883,6 +5887,51 @@
 for both the master and slave ends.
 [clinic start generated code]*/

+#ifdef __ANDROID__
+    static PyObject *
+    os_openpty_impl(PyObject *module)
+    {
+        int master_fd = -1, slave_fd = -1;
+        char * slave_name;
+        PyOS_sighandler_t sig_saved;
+
+        master_fd = open("/dev/ptmx", O_RDWR | O_NONBLOCK | O_NOCTTY); /* open master */
+        if (master_fd < 0)
+            goto posix_error;
+
+        sig_saved = PyOS_setsig(SIGCHLD, SIG_DFL);
+
+        if (unlockpt(master_fd) < 0) {
+            PyOS_setsig(SIGCHLD, sig_saved);
+            goto posix_error;
+        }
+
+        PyOS_setsig(SIGCHLD, sig_saved);
+
+        slave_name = ptsname(master_fd); /* get name of slave */
+        if (slave_name == NULL)
+            goto posix_error;
+
+        slave_fd = _Py_open(slave_name, O_RDWR | O_NOCTTY); /* open slave */
+        if (slave_fd == -1)
+            goto error;
+
+        if (_Py_set_inheritable(master_fd, 0, NULL) < 0)
+            goto posix_error;
+
+        return Py_BuildValue("(ii)", master_fd, slave_fd);
+
+    posix_error:
+        posix_error();
+    error:
+        if (master_fd != -1)
+            close(master_fd);
+        if (slave_fd != -1)
+            close(slave_fd);
+        return NULL;
+    }
+#else
+
 static PyObject *
 os_openpty_impl(PyObject *module)
 /*[clinic end generated code: output=98841ce5ec9cef3c input=f3d99fd99e762907]*/
@@ -5971,7 +6020,7 @@
     return NULL;
 }
 #endif /* defined(HAVE_OPENPTY) || defined(HAVE__GETPTY) || defined(HAVE_DEV_PTMX) */
-
+#endif

 #ifdef HAVE_FORKPTY
 /*[clinic input]
