#!/bin/bash
reset

export P3D=panda3d-input-overhaul
APK=u.r
APK_FILE=./build/outputs/apk/termegl-debug.apk
SRC=termegl
ORIGIN=$(dirname $(realpath "$0") )

adb shell am force-stop $APK


if cd $ORIGIN/$SRC
then

    if [ -f $APK_FILE ]
    then
        echo "Uninstall $APK"
        adb uninstall $APK

        rm -vf $APK_FILE
    fi

    if echo $ANDROID_ARCH|grep -q armv7
    then
        ARCH=armeabi-v7a
    else
        echo "$ANDROID_ARCH not (yet) supported"
        read
        exit
    fi

    echo -n "    Cleaning build : "
    if [ -d build ]
    then
        rm -vrf build */build | wc -l
    else
        echo 'None'
    fi

    echo -n "    Cleaning obj : "
    rm -vrf obj/local|wc -l

    cat > jni/Application.mk <<END
#auto-generated do not edit
APP_PLATFORM := $ANDROID_TARGET
APP_ABI := $ARCH

APP_OPTIM := debug
APP_STL := c++_shared
APP_CPPFLAGS := -fPIE -fexceptions -funwind-tables -frtti -std=c++11
NDK_TOOLCHAIN_VERSION=4.9

P3D=$P3D
#APP_LIBCRYSTAX := static

END


    cat > board.tmp <<END
#auto-generated do not edit
LOCAL_ARM_MODE := arm
LOCAL_DISABLE_RELRO := true

END

    echo "  * adding ndk build file"
    cat > ndk-build.tmp <<END
#auto-generated do not edit

cp -rv ${SDK}/build.${BITS}/${P3D}/built/lib/libpython3.*.so prebuilt/${ARCH}/

#cp $(find $ANDROID_NDK_ROOT|grep /${ARCH}/|grep libgnustl_shared.so$|sort |tail -n 1) -vf prebuilt/${ARCH}/

cp -f ${SDK}/build.${BITS}/${P3D}/built/tmp/lib*.so prebuilt/${ARCH}/

if ndk-build -C .
then

    for fixlib in \$(find |grep libtermegl.so)
    do
        if grep -q obj/local \$fixlib
        then
            echo
            $PDK_PATCHELF --replace-needed ./obj/local/armeabi-v7a/libpython3.7m.so libpython3.7m.so \$fixlib
        else
            echo  is OK
        fi

    done

    #cp -f prebuilt/${ARCH}/*so obj/local/armeabi-v7a/
    mv -vn prebuilt/${ARCH}/*so libs/armeabi-v7a/

    exit 0
else
    exit 1
fi
END


    chmod 777 ndk-build.tmp

    mkdir -p prebuilt/${ARCH}
    echo -n "    Cleaning libs : "
    rm -vf prebuilt/${ARCH}/lib*so|wc -l
    #cp -rv ${SDK}/build.${BITS}/${P3D}/built/lib/libpython3.*.so libs/${ARCH}/
    #cp $(find $ANDROID_NDK_ROOT|grep /${ARCH}/|grep libgnustl_shared.so$|sort |tail -n 1) -vf libs/${ARCH}/
    #for lib in pandagles p3dtool pandaexpress
    #do
    #    cp -fv ${SDK}/build.${BITS}/${P3D}/built/tmp/lib${lib}.so prebuilt/${ARCH}/
    #done
    #cp -f ${SDK}/build.${BITS}/${P3D}/built/tmp/lib*.so libs/${ARCH}/

    if [ -f $APK_FILE ]
    then
        rm -vf $APK_FILE
    fi


    echo "  * launching gradle build"
    ./gradlew assembleDebug "$@" --offline --no-daemon

    if [ -f $APK_FILE ]
    then
        echo "install $APK_FILE"
        adb install $APK_FILE
        aapt=$(find $ANDROID_SDK_ROOT/build-tools/|grep aapt$|sort|tail -n1)
        pkg=$($aapt dump badging "$APK_FILE"|awk -F" " '/package/ {print $2}'|awk -F"'" '/name=/ {print $2}')
        act=$($aapt dump badging "$APK_FILE"|awk -F" " '/launchable-activity/ {print $2}'|awk -F"'" '/name=/ {print $2}')
        echo "Running $pkg/$act"
        adb shell am start -n "$pkg/$act"

        echo "press <enter> to kill app"
        read
        echo "adb shell am force-stop $APK"
        adb shell am force-stop $APK
    fi
fi
