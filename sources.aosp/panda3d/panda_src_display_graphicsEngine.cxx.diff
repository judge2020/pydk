--- panda3d/panda/src/display/graphicsEngine.cxx	2020-03-20 15:48:21.000000000 +0100
+++ panda3d.android/panda/src/display/graphicsEngine.cxx	2020-04-10 13:25:45.324429299 +0200
@@ -63,6 +63,15 @@
   #include <sys/time.h>
 #endif
 
+#include <android/log.h>
+
+
+#include <stdlib.h>
+
+#define LOG_TAG "DEBUG:graphicsEngine.cxx"
+#define LOG_I(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)
+#define LOG_E(...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)
+
 using std::string;
 
 PT(GraphicsEngine) GraphicsEngine::_global_ptr;
@@ -409,6 +418,29 @@
   }
 
   // Ask the pipe to create a window.
+#if __ANDROID__
+    LOG_I("make_output : skipping do_add_window/open_windows -> ?");
+    bool precertify = false;
+    PT(GraphicsOutput) window = pipe->make_output(name, fb_prop, win_prop, flags, this, gsg, host, 0, precertify);
+
+
+    if (window != nullptr) {
+      window->_sort = sort;
+
+        LOG_I("do_add_window");
+        do_add_window(window);
+        //    open_windows();
+        display_cat.warning() << "Created output of type " << window->get_type() << "\n";
+
+
+        if (window->is_valid())
+            LOG_I("make_output : got a valid window");
+        else
+            LOG_I("make_output : got an invalid window");
+        return window;
+    }
+    LOG_I("make_output : NO window");
+#else
 
   for (int retry=0; retry<10; retry++) {
     bool precertify = false;
@@ -457,6 +489,7 @@
     }
   }
 
+
   // Parasite buffers were not preferred, but the pipe could not create a
   // window to the user's specs.  Try a parasite as a last hope.
 
@@ -470,7 +503,7 @@
   }
 
   // Could not create a window to the user's specs.
-
+#endif
   return nullptr;
 }
 
@@ -964,8 +997,11 @@
  */
 void GraphicsEngine::
 open_windows() {
-  Thread *current_thread = Thread::get_current_thread();
+#if __ANDROID__
+    LOG_I("open_windows -> ?");
+#endif
 
+  Thread *current_thread = Thread::get_current_thread();
   ReMutexHolder holder(_lock, current_thread);
 
   pvector<PT(GraphicsOutput)> new_windows;
@@ -1044,9 +1080,14 @@
   // Now go through the list again to check whether they opened successfully.
   for (auto it = new_windows.begin(); it != new_windows.end(); ++it) {
     GraphicsOutput *window = *it;
+    #if __ANDROID__
+        window->_is_valid = true;
+    #endif
     if (window->is_valid()) {
+        LOG_I("open_windows -> OK");
       do_add_gsg(window->get_gsg(), window->get_pipe());
     } else {
+        LOG_E("open_windows -> is_valid FALSE !");
       remove_window(window);
     }
   }
