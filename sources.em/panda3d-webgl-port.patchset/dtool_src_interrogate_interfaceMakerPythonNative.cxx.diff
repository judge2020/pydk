--- panda3d-webgl-port.master/dtool/src/interrogate/interfaceMakerPythonNative.cxx	2017-09-06 11:21:01.000000000 +0200
+++ panda3d-webgl-port.py37/dtool/src/interrogate/interfaceMakerPythonNative.cxx	2018-03-27 20:51:32.564955988 +0200
@@ -4876,7 +4876,7 @@
                                       << default_value->_str.size() << ";\n";
           }
         } else {
-          indent(out, indent_level) << "char *" << param_name << "_str = NULL;\n";
+          indent(out, indent_level) << "const char *" << param_name << "_str = NULL;\n";
           indent(out, indent_level) << "Py_ssize_t " << param_name << "_len;\n";
         }
 
@@ -4885,7 +4885,7 @@
           // As a special hack to fix pickling in Python 3, if the method name
           // starts with py_decode_, we take a bytes object instead of a str.
           if (remap->_cppfunc->get_local_name().substr(0, 10) == "py_decode_") {
-            indent(out, indent_level) << "if (PyBytes_AsStringAndSize(arg, &"
+            indent(out, indent_level) << "if (PyBytes_AsStringAndSize(arg, (char **)&"
               << param_name << "_str, &" << param_name << "_len) == -1) {\n";
             indent(out, indent_level + 2) << param_name << "_str = NULL;\n";
             indent(out, indent_level) << "}\n";
@@ -4895,7 +4895,7 @@
               << param_name << "_len);\n";
           }
           out << "#else\n"; // NB. PyString_AsStringAndSize also accepts a PyUnicode.
-          indent(out, indent_level) << "if (PyString_AsStringAndSize(arg, &"
+          indent(out, indent_level) << "if (PyString_AsStringAndSize(arg, (char **)&"
             << param_name << "_str, &" << param_name << "_len) == -1) {\n";
           indent(out, indent_level + 2) << param_name << "_str = NULL;\n";
           indent(out, indent_level) << "}\n";
