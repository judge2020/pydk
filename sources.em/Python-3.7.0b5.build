#!/bin/bash
TARGET=Emscripten


SRC=Python-3.7.0b5
#--disable-shared
OPT_COMMON="--with-system-ffi --disable-ipv6 --without-ensurepip --with-c-locale-coercion --without-pymalloc"
#unsupported: --with-computed-gotos --without-threads

OPT_TARGET="--enable-shared --without-gcc --host=asmjs-unknown-emscripten"
#GHZIP="https://www.python.org/ftp/python/3.7.0/Python-3.7.0b4.tar.xz"
XZ_SRC="https://www.python.org/ftp/python/3.7.0/Python-3.7.0b5.tar.xz"


if echo $OPT_TARGET|grep -q enable-shared
then
    echo "WARNING: unsupported shared build mode"
    LIBPYTHON=libpython3.7.so
else
    LIBPYTHON=libpython3.7.a
fi



#==============================================================================
ROOT=$(dirname $(realpath "$0") )

. $SDK/build.functions
. $SDK/build.${BITS}.functions



set_source_tree 4200

export DEV_PATHS DEV_TARGET PYVER PYDOT PYMODE OPT_COMMON OPT_TARGET


#
#
#
#OK
#export EMCC_FORCE_STDLIBS=1
#
#EM_FLAGS="-Os -g0 -s ASM_JS=1 -s USE_ZLIB=1 -s LINKABLE=1 -s EMULATE_FUNCTION_POINTER_CASTS=1"
#EM_FLAGS="$EM_FLAGS -s AGGRESSIVE_VARIABLE_ELIMINATION=1 -s ELIMINATE_DUPLICATE_FUNCTIONS=1"
#EM_FLAGS="$EM_FLAGS -s DISABLE_EXCEPTION_CATCHING=1 -s DEMANGLE_SUPPORT=0 -s ASSERTIONS=0"
#EM_FLAGS="$EM_FLAGS -s ERROR_ON_MISSING_LIBRARIES=0 -s ERROR_ON_UNDEFINED_SYMBOLS=0"
#EM_FLAGS="$EM_FLAGS -s SIDE_MODULE=1" # -s EMTERPRETIFY=1 -s EMTERPRETIFY_ASYNC=1"
#

export EM_FLAGS="-O3 -s USE_ZLIB=1 -s SIDE_MODULE=1" # -s EMTERPRETIFY=1 -s EMTERPRETIFY_ASYNC=1"

#
#
#



if echo "$@"|grep -q rebuild
then
    echo "CLEANING UP"
    rm -vf $PDK_EM_PYTHON $ORIGIN/${TARGET}/build.host
    unset PDK_EM_PYTHON_HOST
fi


if [ -n "$PDK_EM_PYTHON" ] && [ -f "$PDK_EM_PYTHON" ]
then
    echo "
    * found TARGET $PDK_EM_PYTHON - skipping HOST + TARGET build
"
else
    if [ -n "$PDK_EM_PYTHON_HOST" ]
    then
        echo "
    * found HOST python [$PDK_EM_PYTHON_HOST]
"
    else
        export PDK_EM_PYTHON_HOST=$ROOT/$SRC.host/bin/python3
        if mkdir -p $ORIGIN/${TARGET}/build.host
        then

            echo "Building HOST $PDK_EM_PYTHON_HOST"

            patch_me

            echo "press <enter> to start build process"
            read

            cd $ORIGIN/${TARGET}/build.host
            ../../configure --disable-shared --prefix=$ROOT/$SRC.host $OPT_COMMON
            make -j 4 install
            register_pdk PDK_EM_PYTHON_HOST $PDK_EM_PYTHON_HOST
        else
            echo "can't create build dir $ORIGIN/${TARGET}/build.host"
            exit 1
        fi
    fi

    export PDK_EM_PYTHON=${ROOT}/${SRC}.{$BITS}/bin/python

    echo Building TARGET [$PDK_EM_PYTHON]

    . $TOOLCHAIN

    if echo $(which emcc)|grep -q emcc$
    then
        mkdir -p $ORIGIN/${TARGET}/build.${BITS}
        cd $ORIGIN/${TARGET}/build.${BITS}
        if [ -f config.done ]
        then
            echo emconfigure already done
        else
            cp ../config.site ./

            export CPPFLAGS="$EM_FLAGS"
            export CONFIG_SITE=./config.site
            export READELF=true
            emconfigure ../../configure $OPT_COMMON $OPT_TARGET --build=$(../../config.guess) --prefix=$ROOT/$SRC.${BITS}
            cp -vf ../Setup.local Modules/Setup.local
            touch config.done
        fi
        EM_MAKE="emmake make HOSTPYTHON=$PDK_EM_PYTHON_HOST PYTHON_FOR_BUILD=$PDK_EM_PYTHON_HOST CROSS_COMPILE=yes"
        $EM_MAKE $LIBPYTHON
        sed -i -e 's/libinstall:.*/libinstall:/' Makefile
        $EM_MAKE inclinstall libinstall $LIBPYTHON
        mkdir -p $ROOT/$SRC.${BITS}/lib
        cp $LIBPYTHON $ROOT/$SRC.${BITS}/lib/
        SYSCF_HOST="$ROOT/$SRC.host/lib/python3.7/_sysconfigdata__linux_x86_64-linux-gnu.py"
        SYSCF_EM="$ROOT/$SRC.${BITS}/lib/python3.7/_sysconfigdata__emscripten_x86_64-linux-gnu.py"
        cp -vf $SYSCF_HOST $SYSCF_EM
    else
        echo emsdk toolchain not found in [$TOOLCHAIN]
    fi
fi


